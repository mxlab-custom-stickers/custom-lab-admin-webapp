/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as TemplateEditorIdImport } from './routes/template-editor.$id'
import { Route as AppColorsImport } from './routes/_app/colors'
import { Route as AppTemplatesIndexImport } from './routes/_app/templates/index'
import { Route as AppSettingsThemeImport } from './routes/_app/settings/theme'
import { Route as AppSettingsGeneralImport } from './routes/_app/settings/general'
import { Route as AppSettingsCustomLabImport } from './routes/_app/settings/custom-lab'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const TemplateEditorIdRoute = TemplateEditorIdImport.update({
  id: '/template-editor/$id',
  path: '/template-editor/$id',
  getParentRoute: () => rootRoute,
} as any)

const AppColorsRoute = AppColorsImport.update({
  id: '/colors',
  path: '/colors',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppTemplatesIndexRoute = AppTemplatesIndexImport.update({
  id: '/templates/',
  path: '/templates/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsThemeRoute = AppSettingsThemeImport.update({
  id: '/settings/theme',
  path: '/settings/theme',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsGeneralRoute = AppSettingsGeneralImport.update({
  id: '/settings/general',
  path: '/settings/general',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsCustomLabRoute = AppSettingsCustomLabImport.update({
  id: '/settings/custom-lab',
  path: '/settings/custom-lab',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/colors': {
      id: '/_app/colors'
      path: '/colors'
      fullPath: '/colors'
      preLoaderRoute: typeof AppColorsImport
      parentRoute: typeof AppRouteImport
    }
    '/template-editor/$id': {
      id: '/template-editor/$id'
      path: '/template-editor/$id'
      fullPath: '/template-editor/$id'
      preLoaderRoute: typeof TemplateEditorIdImport
      parentRoute: typeof rootRoute
    }
    '/_app/settings/custom-lab': {
      id: '/_app/settings/custom-lab'
      path: '/settings/custom-lab'
      fullPath: '/settings/custom-lab'
      preLoaderRoute: typeof AppSettingsCustomLabImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/settings/general': {
      id: '/_app/settings/general'
      path: '/settings/general'
      fullPath: '/settings/general'
      preLoaderRoute: typeof AppSettingsGeneralImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/settings/theme': {
      id: '/_app/settings/theme'
      path: '/settings/theme'
      fullPath: '/settings/theme'
      preLoaderRoute: typeof AppSettingsThemeImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/templates/': {
      id: '/_app/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof AppTemplatesIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppColorsRoute: typeof AppColorsRoute
  AppSettingsCustomLabRoute: typeof AppSettingsCustomLabRoute
  AppSettingsGeneralRoute: typeof AppSettingsGeneralRoute
  AppSettingsThemeRoute: typeof AppSettingsThemeRoute
  AppTemplatesIndexRoute: typeof AppTemplatesIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppColorsRoute: AppColorsRoute,
  AppSettingsCustomLabRoute: AppSettingsCustomLabRoute,
  AppSettingsGeneralRoute: AppSettingsGeneralRoute,
  AppSettingsThemeRoute: AppSettingsThemeRoute,
  AppTemplatesIndexRoute: AppTemplatesIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/colors': typeof AppColorsRoute
  '/template-editor/$id': typeof TemplateEditorIdRoute
  '/settings/custom-lab': typeof AppSettingsCustomLabRoute
  '/settings/general': typeof AppSettingsGeneralRoute
  '/settings/theme': typeof AppSettingsThemeRoute
  '/templates': typeof AppTemplatesIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AppRouteRouteWithChildren
  '/colors': typeof AppColorsRoute
  '/template-editor/$id': typeof TemplateEditorIdRoute
  '/settings/custom-lab': typeof AppSettingsCustomLabRoute
  '/settings/general': typeof AppSettingsGeneralRoute
  '/settings/theme': typeof AppSettingsThemeRoute
  '/templates': typeof AppTemplatesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/colors': typeof AppColorsRoute
  '/template-editor/$id': typeof TemplateEditorIdRoute
  '/_app/settings/custom-lab': typeof AppSettingsCustomLabRoute
  '/_app/settings/general': typeof AppSettingsGeneralRoute
  '/_app/settings/theme': typeof AppSettingsThemeRoute
  '/_app/templates/': typeof AppTemplatesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/colors'
    | '/template-editor/$id'
    | '/settings/custom-lab'
    | '/settings/general'
    | '/settings/theme'
    | '/templates'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/colors'
    | '/template-editor/$id'
    | '/settings/custom-lab'
    | '/settings/general'
    | '/settings/theme'
    | '/templates'
  id:
    | '__root__'
    | '/_app'
    | '/_app/colors'
    | '/template-editor/$id'
    | '/_app/settings/custom-lab'
    | '/_app/settings/general'
    | '/_app/settings/theme'
    | '/_app/templates/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  TemplateEditorIdRoute: typeof TemplateEditorIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  TemplateEditorIdRoute: TemplateEditorIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/template-editor/$id"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/colors",
        "/_app/settings/custom-lab",
        "/_app/settings/general",
        "/_app/settings/theme",
        "/_app/templates/"
      ]
    },
    "/_app/colors": {
      "filePath": "_app/colors.tsx",
      "parent": "/_app"
    },
    "/template-editor/$id": {
      "filePath": "template-editor.$id.tsx"
    },
    "/_app/settings/custom-lab": {
      "filePath": "_app/settings/custom-lab.tsx",
      "parent": "/_app"
    },
    "/_app/settings/general": {
      "filePath": "_app/settings/general.tsx",
      "parent": "/_app"
    },
    "/_app/settings/theme": {
      "filePath": "_app/settings/theme.tsx",
      "parent": "/_app"
    },
    "/_app/templates/": {
      "filePath": "_app/templates/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
